@inject IRequestService _req
@inject IHttpContextAccessor _http

<AuthorizeView>
    <Authorized>
        <!-- Add Notification Center -->
        <div class="content">
            <div class="container">
              <div class="row justify-content-center text-center">
                <div class="col-md-5">
                  <div class="dropdown custom-dropdown">
                    <a href="#" data-toggle="dropdown" class="dropdown-link" aria-haspopup="true" aria-expanded="false">
                      <span class="wrap-icon icon-notifications"></span>
                      <span class="number">@Requests.Count</span>              
                    </a>
                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">
                      <div class="title-wrap d-flex align-items-center">
                        <h3 class="title mb-0">Notifications</h3>
                      </div>

                      @foreach (var item in Requests)
                      {
                        <ul class="custom-notifications">
                            <li>
                              <a href="#" class="d-flex">
                                  <!-- Maybe add Profile Picture later -->
                                @*<div class="img mr-3">
                                  <img src="images/person_1.jpg" alt="Image" class="img-fluid">
                                </div>*@
                                <div class="text">
                                  <strong>@item.Sender.UserName:</strong> sent you a Friend Request
                                </div>
                                <div>
                                  <a class="btn btn-success w-25 h-50" @onclick="() => AcceptRequest(item.Id)" >Accept</a>
                                  <a class="btn btn-danger w-25 h-50" @onclick="() => DeclineRequest(item.Id)">Decline</a>
                                </div>
                              </a>
                            </li>
                          </ul>
                      }
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        <a class="text-dark" href="Identity/Account/Manage">Hello, @context.User.Identity?.Name!</a>
        <form class="text-dark" method="post" action="Identity/Account/LogOut">
            <button type="submit" class="nav-link btn btn-link text-dark">Log out</button>
        </form>
    </Authorized>
    <NotAuthorized>
        <a href="Identity/Account/Register">Register</a>
        <a href="Identity/Account/Login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code{
    List<Request> Requests = new();

    private async void AcceptRequest(int id)
    {
        await _req.AcceptRequestFromUserWithId(_http.HttpContext.User.Identity.Name, id);
    }

    private async void DeclineRequest(int id)
    {
        await _req.RejectRequestFromUserWithId(_http.HttpContext.User.Identity.Name, id);
    }

    protected override async Task OnInitializedAsync()
    {
        var user = _http.HttpContext.User.Identity.Name;
        Requests = await _req.GetAllRequestsFromUser(user);
        await base.OnInitializedAsync();
    }
}