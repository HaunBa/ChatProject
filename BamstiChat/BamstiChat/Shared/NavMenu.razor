@using System.Security.Claims
@inject IFriendService _friends
@inject IHttpContextAccessor _context

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BamstiChat</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="AddFriend">
                <span class="oi oi-people" aria-hidden="true"></span> Add Friends
            </NavLink>
        </div>
        @foreach (var item in Friends)
        {
            <div class="nav-item px-3">
                <a href="Chat/@item.User.UserName">
                    <span class="oi oi-person" aria-hidden="true"></span> @item.User.UserName
                </a>
            </div>
        }
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private List<Friend> Friends = new();

    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override Task OnInitializedAsync()
    {
        var username = _context.HttpContext.User.Identity.Name;
        if (username != null) Friends = _friends.GetAllFriends(username).GetAwaiter().GetResult();
        
        return Task.CompletedTask;
    }
}